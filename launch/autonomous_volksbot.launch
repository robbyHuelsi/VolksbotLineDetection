<?xml version="1.0"?>
<launch>
	<!--param name="robot_description" command="$(find xacro)/xacro.py '$(find volksbot_driver)/urdf/example.urdf.xacro'" />
	<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" /-->

	<node name="volksbot_driver_node" pkg="volksbot_driver" type="volksbot" respawn="false" output="screen">
		<!-- default values: -->
		<!--
		<param name="wheel_radius" type="double" value="0.0985" />
		<param name="axis_length" type="double" value="0.41" />
		<param name="gear_ratio" type="int" value="74" />
		<param name="turning_adaptation" type="double" value="0.95" />
		<param name="x_stddev" type="double" value="0.002" />
		<param name="rotation_stddev" type="double" value="0.017" />
		<param name="cov_xy" type="double" value="0.0" />
		<param name="cov_xrotation" type="double" value="0.0" />
		<param name="cov_yrotation" type="double" value="0.0" />
		<param name="publish_tf" type="bool" value="False" />
		-->
	</node>

	<!-- 0=ZED, 1=ZEDM-->
	<arg name="camera_model"          default="0" /> 
	<arg name="svo_file"              default="" />
	<arg name="zed_id"                default="0" />
	<!-- If a ZED SN is given, zed_id is ignored and the wrapper will specifically look for the ZED with the corresponding serial number -->
	<arg name="serial_number"                default="0" /> 

	<!-- GPU ID-->
	<arg name="gpu_id"                default="-1" />
	<!-- Definition coordinate frames -->
	<arg name="publish_tf"            default="false" />
	<arg name="odometry_frame"        default="odom" />
	<arg name="base_frame"            default="zed_center" />
	<arg name="camera_frame"          default="zed_left_camera" />
	<arg name="depth_frame"           default="zed_depth_camera" />
	<!-- Publish urdf zed -->
	<arg name="publish_urdf"          default="false" />
    
    <node name="zed_wrapper_node" pkg="zed_wrapper" type="zed_wrapper_node" output="screen" required="true">

		<param name="camera_model"          value="$(arg camera_model)" />
		<!-- publish odometry frame -->
		<param name="publish_tf"            value="$(arg publish_tf)" />
		<!-- Configuration frame camera -->    
		<param name="odometry_frame"        value="$(arg odometry_frame)" />
		<param name="base_frame"            value="$(arg base_frame)" />
		<param name="camera_frame"          value="$(arg camera_frame)" />
		<param name="depth_frame"           value="$(arg depth_frame)" />

		<!-- SVO file path -->
		<param name="svo_filepath"          value="$(arg svo_file)" />

		<!-- ZED parameters -->
		<param name="zed_id"                value="$(arg zed_id)" />
		<param name="serial_number"         value="$(arg serial_number)" />

		<param name="resolution"            value="2" />
		<param name="quality"               value="1" />
		<param name="sensing_mode"          value="0" />
		<param name="frame_rate"            value="25" />
		<param name="odometry_db"           value="" />
		<param name="openni_depth_mode"     value="0" />
		<param name="gpu_id"                value="$(arg gpu_id)" />
		<param name="confidence"            value="100" />
		<param name="gain"                  value="100" />
		<param name="exposure"              value="100" />
		<param name="auto_exposure"         value="true" />
		<param name="depth_stabilization"   value="1" />

		<!-- ROS topic names -->
		<param name="rgb_topic"             value="rgb/image_rect_color" />
		<param name="rgb_raw_topic"         value="rgb/image_raw_color" />
		<param name="rgb_cam_info_topic"    value="rgb/camera_info" />
		<param name="rgb_cam_info_raw_topic"    value="rgb/camera_info_raw" />

		<param name="left_topic"            value="left/image_rect_color" />
		<param name="left_raw_topic"        value="left/image_raw_color" />
		<param name="left_cam_info_topic"   value="left/camera_info" />
		<param name="left_cam_info_raw_topic"   value="left/camera_info_raw" />

		<param name="right_topic"           value="right/image_rect_color" />
		<param name="right_raw_topic"       value="right/image_raw_color" />
		<param name="right_cam_info_topic"  value="right/camera_info" />
		<param name="right_cam_info_raw_topic"  value="right/camera_info_raw" />

		<param name="depth_topic"           value="depth/depth_registered" />
		<param name="depth_cam_info_topic"  value="depth/camera_info" />

		<param name="point_cloud_topic"     value="point_cloud/cloud_registered" />

		<param name="odometry_topic"        value="odom" />

    </node>

    <!-- ROS URDF description of the ZED -->
    <group if="$(arg publish_urdf)">
        <param if="$(arg camera_model)" name="zed_description" textfile="$(find zed_wrapper)/urdf/zedm.urdf" />
        <param unless="$(arg camera_model)" name="zed_description" textfile="$(find zed_wrapper)/urdf/zed.urdf" />
        <node name="zed_state_publisher" pkg="robot_state_publisher" type="state_publisher">
            <remap from="robot_description" to="zed_description" />
        </node>
    </group>
    
    <arg name="x_vel" default="0.1" />
    <arg name="model_file" />
    <arg name="weight_file" />
    <arg name="args_file" default="" />
    <arg name="show_time" default="false" />
    
    <node name="img2twist_node" pkg="autonomous_driving" type="nn_predictor.py" respawn="true" output="screen">
	<remap from="/image" to="/left/image_rect_color/compressed" />
    	<param name="x_vel" value="$(arg x_vel)"/>
    	<param name="model_file" value="$(arg model_file)"/>
    	<param name="weight_file" value="$(arg weight_file)"/>
    	<param name="args_file" value="$(arg args_file)"/>
    	<param name="show_time" value="$(arg show_time)"/>
    </node>

</launch>
